/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import React from 'react';
import { NxTable, NxP, NxCode, NxList } from "@sonatype/react-shared-components";

import { GalleryDescriptionTile, GalleryExampleTile } from '../../gallery-components/GalleryTiles';

const toCvssScoreStringExampleCode = require('./ToCvssScoreStringExample?raw'),
    getVulnerabilityLevelCategoryExampleCode = require('./GetVulnerabilityLevelCategoryExample?raw');

const VulnerabilityThreatLevelUtilsPage = () =>
  <>
    <GalleryDescriptionTile>
      <NxP>
        The React Shared Components library includes a few simple JavaScript
        objects and TypeScript types that provide code definitions and mappings to help represent
        CVSS Score and vulnerability/severity levels.
      </NxP>

      <NxList bulleted>
        <NxList.Item>
          <NxList.Text>
            <strong>CVSS Score</strong> A one decimal point precision number between 0.0 and 10.0, inclusive,
            that describes the severity of a threat. Zero represents no
            bulnerability at all and ten represents the most severe of vulnerabilities.
          </NxList.Text>
        </NxList.Item>
        <NxList.Item>
          <NxList.Text>
            <strong>Vulnerability Threat Level</strong>
            {' '}In increasing order of severity: <q>none</q>; <q>low</q>; <q>medium</q>; <q>high</q>;
            and <q>critical</q>. Each Vulnerability Threat Level is a member of a corresponding
            range of CVSS Scores:

            <NxList className="nx-list--bulleted">
              <NxList.Item>
                <NxList.Text><strong>none:</strong> 0.0</NxList.Text>
              </NxList.Item>
              <NxList.Item>
                <NxList.Text><strong>low:</strong> 0.1{'\u2014'}3.9</NxList.Text>
              </NxList.Item>
              <NxList.Item>
                <NxList.Text><strong>medium:</strong> 4.0{'\u2014'}6.9</NxList.Text>
              </NxList.Item>
              <NxList.Item>
                <NxList.Text><strong>high:</strong> 7.0{'\u2014'}8.9</NxList.Text>
              </NxList.Item>
              <NxList.Item>
                <NxList.Text><strong>critical:</strong> 9.0{'\u2014'}10.0</NxList.Text>
              </NxList.Item>
            </NxList>
          </NxList.Text>
        </NxList.Item>
      </NxList>

      <NxP>
        The following table shows the mapping between vulnerability level score and vulnerability level category.
      </NxP>
      <NxTable>
        <NxTable.Head>
          <NxTable.Row>
            <NxTable.Cell>Vulnerability Level Score</NxTable.Cell>
            <NxTable.Cell>Vulnerability Level Category</NxTable.Cell>
          </NxTable.Row>
        </NxTable.Head>
        <NxTable.Body>
          <NxTable.Row>
            <NxTable.Cell>0.0</NxTable.Cell>
            <NxTable.Cell>none</NxTable.Cell>
          </NxTable.Row>
          <NxTable.Row>
            <NxTable.Cell>0.1 {'\u2014'} 3.9</NxTable.Cell>
            <NxTable.Cell>low</NxTable.Cell>
          </NxTable.Row>
          <NxTable.Row>
            <NxTable.Cell>4.0 {'\u2014'} 6.9</NxTable.Cell>
            <NxTable.Cell>medium</NxTable.Cell>
          </NxTable.Row>
          <NxTable.Row>
            <NxTable.Cell>7.0 {'\u2014'} 8.9</NxTable.Cell>
            <NxTable.Cell>high</NxTable.Cell>
          </NxTable.Row>
          <NxTable.Row>
            <NxTable.Cell>9.0 {'\u2014'} 10.0</NxTable.Cell>
            <NxTable.Cell>critical</NxTable.Cell>
          </NxTable.Row>
        </NxTable.Body>
      </NxTable>
    </GalleryDescriptionTile>

    <GalleryExampleTile id="toCvssScoreStringExample"
                        title="ToCvssScoreString"
                        codeExamples={toCvssScoreStringExampleCode}>
      To help ensuring consistency, we provide a utility {' '}
      <NxCode>toCvssScoreString</NxCode> to format numbers into the correct format when displaying
      CVSS score next to the indicator.
    </GalleryExampleTile>

    <GalleryExampleTile title="GetVulnerabilityLevelCategory"
                        codeExamples={getVulnerabilityLevelCategoryExampleCode}>
      <NxCode>getVulnerabilityLevelCategory</NxCode>
      is a helper function that formats a number into its valid CVSS score string representation.
      This ensures that the CVSS score is both valid and displayed consistently.
    </GalleryExampleTile>
  </>;

export default VulnerabilityThreatLevelUtilsPage;
