/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import React, { forwardRef } from 'react';
import classnames from 'classnames';
import {
  NxVulnerabilityIndicatorLegendProps,
  nxVulnerabilityIndicatorLegendPropTypes,
  VulnerabilityProps
} from './types';
import NxVulnerabilityIndicator from '../NxVulnerabilityIndicator/NxVulnerabilityIndicator';
import './NxVulnerabilityIndicatorLegend.scss';

const capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1);

const VulnerabilityIndicator = ({ severityLevel }: VulnerabilityProps) => {
  return (
    <div className="nx-vulnerability-indicator-legend__vulnerability-container">
      <NxVulnerabilityIndicator severityLevel={severityLevel} />
      <span>{capitalize(severityLevel)}</span>
    </div>
  );
};

const NxVulnerabilityIndicatorLegend = forwardRef<HTMLDivElement, NxVulnerabilityIndicatorLegendProps>(
    (props: NxVulnerabilityIndicatorLegendProps, ref) => {
      const {
        critical,
        high,
        medium,
        low,
        none,
        vertical,
        header,
        className,
        ...attrs
      } = props;
      const classNames = classnames(className, 'nx-vulnerability-indicator-legend', {
        'nx-vulnerability-indicator-legend--vertical': vertical
      });

      if (!critical && !high && !medium && !low && !none) {
        console.warn(`No vulnerability severity level for NxVulnerabilityIndicatorLegend have been provided
        as props so nothing will be rendered.`);
        return null;
      }

      return (
        <div ref={ref} className={classNames} {...attrs}>
          <label className="nx-vulnerability-indicator-legend__header">{header || 'Legend'}</label>
          {critical && <VulnerabilityIndicator severityLevel="critical"/>}
          {high && <VulnerabilityIndicator severityLevel="high"/>}
          {medium && <VulnerabilityIndicator severityLevel="medium"/>}
          {low && <VulnerabilityIndicator severityLevel="low"/>}
          {none && <VulnerabilityIndicator severityLevel="none"/>}
        </div>
      );
    });

NxVulnerabilityIndicatorLegend.propTypes = nxVulnerabilityIndicatorLegendPropTypes;

export default NxVulnerabilityIndicatorLegend;
export { NxVulnerabilityIndicatorLegendProps, nxVulnerabilityIndicatorLegendPropTypes } from './types';
