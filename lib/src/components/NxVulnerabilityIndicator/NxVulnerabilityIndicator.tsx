/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import React, { FunctionComponent, ReactElement } from 'react';
import NxTooltip from '../NxTooltip/NxTooltip';

import { VulnerabilityLevelCategory, getVulnerabilityLevelCategory } from '../../util/vulnerabilityLevels';
import { Props, propTypes } from './types';
export { Props } from './types';

import './NxVulnerabilityIndicator.scss';
import NxFontAwesomeIcon from '../NxFontAwesomeIcon/NxFontAwesomeIcon';
import { faSquare } from '@fortawesome/free-solid-svg-icons';
import classnames from 'classnames';

const capitalize = (string: string) => string.charAt(0).toUpperCase() + string.slice(1);

const NxVulnerabilityIndicator: FunctionComponent<Props> =
  function NxVulnerabilityIndicator(props): ReactElement<Props> {
    const {
          title,
          vulnerabilityLevelCategory,
          policyVulnerabilityScore,
          className: classNameProp,
          presentational
        } = props,
        category: VulnerabilityLevelCategory = vulnerabilityLevelCategory
          ? vulnerabilityLevelCategory
          : policyVulnerabilityScore !== undefined
            ? getVulnerabilityLevelCategory(policyVulnerabilityScore) || 'none'
            : 'none',
        className = classnames(
            classNameProp,
            `nx-vulnerability-indicator nx-vulnerability-indicator--${category} nx-icon--colorful`
        ),
        label = `vulnerability level ${category}`;

    const icon = (
      <NxFontAwesomeIcon aria-label={presentational ? undefined : label}
                         className={className}
                         icon={faSquare}
                         role={presentational ? 'presentation' : 'graphics-symbol img'} />
    );

    return presentational ? icon : (
      <NxTooltip title={title || capitalize(category)}>
        {icon}
      </NxTooltip>
    );
  };

NxVulnerabilityIndicator.propTypes = propTypes;

export default NxVulnerabilityIndicator;
